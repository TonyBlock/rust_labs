// Вычислите модуль вектора просуммировав квадраты его координат
// и вычислив квадратный корень полученного значения. Используйте метод `sqrt()` для вычисления
// корня, следующим образом: v.sqrt().


fn magnitude(coords: &[f64; 3]) -> f64 {
    (coords[0].powi(2) + coords[1].powi(2) + coords[2].powi(2)).sqrt()
}

// Нормализуйте вектор вычислив его модуль и разделив все его координаты на 
// этот модудль.


fn normalize(coords: &mut [f64; 3]) {
    let module = magnitude(coords);
    for i in 0..3 {
        coords[i] /= module;
    }
}

// Используйте эту функцию main для проверки своей работы.

fn main() {
    println!("Модуль единичного вектора: {}", magnitude(&[0.0, 1.0, 0.0]));

    let mut v = [1.0, 2.0, 9.0];
    println!("Модуль {v:?}: {}", magnitude(&v));
    normalize(&mut v);
    println!("Модуль {v:?} после нормализации: {}", magnitude(&v));
}